{"version":3,"file":"LanguageTagType.js","sources":["../../../src/values/LanguageTagType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class LanguageTagType extends BaseValue {\n  static type = \"LANGUAGE-TAG\";\n  static identifier = \"LanguageTagType\";\n\n  #langTagValue;\n\n  #validate(langTagValue) {\n    if (typeof langTagValue === \"undefined\")\n      throw new MissingArgument(\"Value for LanguageTagType must be supplied\");\n    else if (typeof langTagValue !== \"string\")\n      throw new TypeError(\"Value for LanguageTagType should be of type string\");\n  }\n\n  get value() {\n    return this.#langTagValue;\n  }\n\n  get valueXML() {\n    return `<${this.constructor.type.toLowerCase()}>${\n      this.#langTagValue\n    }</${this.constructor.type.toLowerCase()}>`;\n  }\n\n  get valueJSON() {\n    return [this.constructor.type.toLowerCase(), this.#langTagValue];\n  }\n\n  constructor(langTagValue) {\n    super();\n\n    this.#validate(langTagValue);\n    this.#langTagValue = langTagValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(LanguageTagType);\n"],"names":["_langTagValue","WeakMap","_validate","WeakSet","LanguageTagType","_BaseValue","_inherits","_super","_createSuper","langTagValue","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","_classPrivateFieldSet","checkAbstractPropertiesAndMethods","Object","freeze","_createClass","key","get","_classPrivateFieldGet","concat","constructor","type","toLowerCase","BaseValue","MissingArgument","TypeError","_defineProperty"],"mappings":";;;;AACqD,IAAAA,aAAA,oBAAAC,OAAA,EAAA,CAAA;AAAA,IAAAC,SAAA,oBAAAC,OAAA,EAAA,CAAA;AAExCC,IAAAA,eAAe,0BAAAC,UAAA,EAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,UAAA,CAAA,CAAA;AAAA,EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA,CAAA,CAAA;EA2B1B,SAAAA,eAAAA,CAAYK,cAAY,EAAE;AAAA,IAAA,IAAAC,KAAA,CAAA;AAAAC,IAAAA,eAAA,OAAAP,eAAA,CAAA,CAAA;IACxBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,CAAA,IAAA,CAAA,CAAA;AAAQC,IAAAA,2BAAA,CAAAC,sBAAA,CAAAJ,KAAA,GAAAR,SAAA,CAAA,CAAA;AAAAa,IAAAA,0BAAA,CAAAD,sBAAA,CAAAJ,KAAA,GAAAV,aAAA,EAAA;MAAAgB,QAAA,EAAA,IAAA;MAAAC,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAERC,IAAAA,sBAAA,CAAAJ,sBAAA,CAAAJ,KAAA,GAAAR,SAAA,EAAAiB,UAAA,CAAA,CAAAP,IAAA,CAAAE,sBAAA,CAAAJ,KAAA,GAAeD,cAAY,CAAA,CAAA;AAC3BW,IAAAA,qBAAA,CAAAN,sBAAA,CAAAJ,KAAA,CAAAV,EAAAA,aAAA,EAAqBS,cAAY,CAAA,CAAA;IAEjCC,KAAA,CAAKW,iCAAiC,EAAE,CAAA;AACxCC,IAAAA,MAAM,CAACC,MAAM,CAAAT,sBAAA,CAAAJ,KAAA,CAAK,CAAC,CAAA;AAAC,IAAA,OAAAA,KAAA,CAAA;AACtB,GAAA;AAACc,EAAAA,YAAA,CAAApB,eAAA,EAAA,CAAA;IAAAqB,GAAA,EAAA,OAAA;IAAAC,GAAA,EAtBD,SAAAA,GAAAA,GAAY;AACV,MAAA,OAAAC,qBAAA,CAAO,IAAI,EAAA3B,aAAA,CAAA,CAAA;AACb,KAAA;AAAC,GAAA,EAAA;IAAAyB,GAAA,EAAA,UAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAe;AACb,MAAA,OAAA,GAAA,CAAAE,MAAA,CAAW,IAAI,CAACC,WAAW,CAACC,IAAI,CAACC,WAAW,EAAE,EAAA,GAAA,CAAA,CAAAH,MAAA,CAAAD,qBAAA,CAC5C,IAAI,EAAA3B,aAAA,CAAA4B,EAAAA,IAAAA,CAAAA,CAAAA,MAAA,CACD,IAAI,CAACC,WAAW,CAACC,IAAI,CAACC,WAAW,EAAE,EAAA,GAAA,CAAA,CAAA;AAC1C,KAAA;AAAC,GAAA,EAAA;IAAAN,GAAA,EAAA,WAAA;IAAAC,GAAA,EAED,SAAAA,GAAAA,GAAgB;AACd,MAAA,OAAO,CAAC,IAAI,CAACG,WAAW,CAACC,IAAI,CAACC,WAAW,EAAE,EAAAJ,qBAAA,CAAE,IAAI,EAAA3B,aAAA,CAAe,CAAA,CAAA;AAClE,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,EAAA,OAAAI,eAAA,CAAA;AAAA,CAAA,CAzBkC4B,SAAS,EAAA;AAoC7C,SAAAb,UAAAA,CA9BWV,YAAY,EAAE;EACtB,IAAI,OAAOA,YAAY,KAAK,WAAW,EACrC,MAAM,IAAIwB,eAAe,CAAC,4CAA4C,CAAC,CAAC,KACrE,IAAI,OAAOxB,YAAY,KAAK,QAAQ,EACvC,MAAM,IAAIyB,SAAS,CAAC,oDAAoD,CAAC,CAAA;AAC7E,CAAA;AAACC,eAAA,CAXU/B,eAAe,EAAA,MAAA,EACZ,cAAc,CAAA,CAAA;AAAA+B,eAAA,CADjB/B,eAAe,EAAA,YAAA,EAEN,iBAAiB,CAAA,CAAA;AAoCvCkB,MAAM,CAACC,MAAM,CAACnB,eAAe,CAAC;;;;"}