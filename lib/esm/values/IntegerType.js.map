{"version":3,"file":"IntegerType.js","sources":["../../../src/values/IntegerType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class IntegerType extends BaseValue {\n  static type = \"INTEGER\";\n  static identifier = \"IntegerType\";\n\n  #intValue;\n\n  #validate(intValue) {\n    if (typeof intValue === \"undefined\")\n      throw new MissingArgument(\"Value for IntegerType must be supplied\");\n    else if (typeof intValue !== \"number\" && typeof intValue !== \"bigint\")\n      throw new TypeError(\n        \"Value for IntegerType must be of type number or bigint\"\n      );\n    else if (/\\./.test(intValue.toString()))\n      throw new InvalidArgument(\"Invalid value for IntegerType\");\n    else if (\n      typeof intValue === \"number\" &&\n      !(\n        -Number.MAX_SAFE_INTEGER < intValue &&\n        intValue < Number.MAX_SAFE_INTEGER\n      )\n    )\n      throw new InvalidArgument(\n        `The maximum value is ${Number.MAX_SAFE_INTEGER}, and the minimum value is ${Number.MIN_SAFE_INTEGER} for number IntegerType`\n      );\n    else if (\n      typeof intValue === \"bigint\" &&\n      !(-9223372036854775809n < intValue && intValue < 9223372036854775808n)\n    )\n      throw new InvalidArgument(\n        \"The maximum value is 9223372036854775807n, and the minimum value is -9223372036854775808n for bigint IntegerType\"\n      );\n  }\n\n  get value() {\n    return `${this.#intValue}`;\n  }\n\n  get valueXML() {\n    return `<${this.constructor.type.toLowerCase()}>${\n      this.#intValue\n    }</${this.constructor.type.toLowerCase()}>`;\n  }\n\n  get valueJSON() {\n    return [this.constructor.type.toLowerCase(), this.#intValue];\n  }\n\n  constructor(intValue) {\n    super();\n\n    this.#validate(intValue);\n    this.#intValue = intValue;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(IntegerType);\n"],"names":["IntegerType","intValue","checkAbstractPropertiesAndMethods","Object","freeze","constructor","type","toLowerCase","BaseValue","MissingArgument","TypeError","test","toString","InvalidArgument","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER"],"mappings":"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"}