{"version":3,"file":"IntegerListType.js","sources":["../../../src/values/IntegerListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class IntegerListType extends BaseValue {\n  static type = \"INTEGER\";\n  static identifier = \"IntegerListType\";\n\n  #integerlist;\n\n  get value() {\n    return this.#integerlist\n      .reduce((accumulatedIntegerTypes, currentIntegerType) => {\n        accumulatedIntegerTypes.push(currentIntegerType.repr());\n        return accumulatedIntegerTypes;\n      }, [])\n      .join(\",\");\n  }\n\n  get valueXML() {\n    return this.#integerlist.reduce(\n      (accumulatedIntegerTypes, currentIntegerType) =>\n        accumulatedIntegerTypes + currentIntegerType.reprXML(),\n      \"\"\n    );\n  }\n\n  get valueJSON() {\n    const value = this.#integerlist.reduce(\n      (accumulatedIntegerTypes, currentIntegerType) => {\n        accumulatedIntegerTypes.push(currentIntegerType.reprJSON().pop());\n        return accumulatedIntegerTypes;\n      },\n      []\n    );\n\n    value.unshift(this.constructor.type.toLowerCase());\n\n    return value;\n  }\n\n  #validate(integerlist) {\n    if (typeof integerlist === \"undefined\")\n      throw new MissingArgument(\"Value for IntegerListType must be supplied\");\n    else if (!Array.isArray(integerlist))\n      throw new TypeError(\n        \"Value for IntegerListType must be passed in an array\"\n      );\n\n    for (const integer of integerlist) {\n      if (integer.constructor.identifier !== \"IntegerType\")\n        throw new TypeError(\n          \"Invalid type for value of IntegerListType. It should be an array of IntegerTypes\"\n        );\n    }\n  }\n\n  constructor(integerlist) {\n    super();\n\n    this.#validate(integerlist);\n    this.#integerlist = integerlist;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(IntegerListType);\n"],"names":["IntegerListType","integerlist","checkAbstractPropertiesAndMethods","Object","freeze","reduce","accumulatedIntegerTypes","currentIntegerType","push","repr","join","reprXML","value","reprJSON","pop","unshift","constructor","type","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","integer","identifier"],"mappings":"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"}