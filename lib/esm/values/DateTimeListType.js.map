{"version":3,"file":"DateTimeListType.js","sources":["../../../src/values/DateTimeListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class DateTimeListType extends BaseValue {\n  static identifier = \"DateTimeListType\";\n\n  #datetimelist;\n\n  get value() {\n    return this.#datetimelist\n      .reduce((accumulatedDateTimeTypes, currentDateTimeType) => {\n        accumulatedDateTimeTypes.push(currentDateTimeType.repr());\n        return accumulatedDateTimeTypes;\n      }, [])\n      .join(\",\");\n  }\n\n  get valueXML() {\n    return this.#datetimelist.reduce(\n      (accumulatedDateTimeTypes, currentDateTimeType) =>\n        accumulatedDateTimeTypes + currentDateTimeType.reprXML(),\n      \"\"\n    );\n  }\n\n  get valueJSON() {\n    const value = this.#datetimelist.reduce(\n      (accumulatedIntegerTypes, currentIntegerType) => {\n        accumulatedIntegerTypes.push(currentIntegerType.reprJSON().pop());\n        return accumulatedIntegerTypes;\n      },\n      []\n    );\n\n    value.unshift(this.type.toLowerCase());\n\n    return value;\n  }\n\n  #validate(datetimelist) {\n    if (typeof datetimelist === \"undefined\")\n      throw new MissingArgument(\"Value for DateTimeListType must be supplied\");\n    else if (!Array.isArray(datetimelist))\n      throw new TypeError(\n        \"Value for DateTimeListType should be passed in an array\"\n      );\n\n    const conformType = datetimelist[0][\"type\"];\n\n    for (const datetime of datetimelist) {\n      if (datetime.type !== conformType)\n        throw new TypeError(\n          \"Value for DateTimeListType should be an array of DateTimeTypes of the same type\"\n        );\n      else if (datetime.type === \"UTC-OFFSET\")\n        throw new TypeError(\"Invalid type for value of DateTimeListType\");\n      else if (datetime.constructor.identifier !== \"DateTimeType\")\n        throw new TypeError(\n          \"Value for DateTimeListType should be an array of DateTimeTypes\"\n        );\n    }\n  }\n\n  constructor(datetimelist) {\n    super();\n\n    this.#validate(datetimelist);\n    this.#datetimelist = datetimelist;\n    this.type = datetimelist[0][\"type\"];\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(DateTimeListType);\n"],"names":["DateTimeListType","datetimelist","type","checkAbstractPropertiesAndMethods","Object","freeze","reduce","accumulatedDateTimeTypes","currentDateTimeType","push","repr","join","reprXML","value","accumulatedIntegerTypes","currentIntegerType","reprJSON","pop","unshift","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","conformType","datetime","constructor","identifier"],"mappings":"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"}