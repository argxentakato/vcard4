{"version":3,"file":"FloatListType.js","sources":["../../../src/values/FloatListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class FloatListType extends BaseValue {\n  static type = \"FLOAT\";\n  static identifier = \"FloatListType\";\n\n  #floatlist;\n\n  get value() {\n    return this.#floatlist\n      .reduce((accumulatedFloatTypes, currentFloatType) => {\n        accumulatedFloatTypes.push(currentFloatType.repr());\n        return accumulatedFloatTypes;\n      }, [])\n      .join(\",\");\n  }\n\n  get valueXML() {\n    return this.#floatlist.reduce(\n      (accumulatedFloatTypes, currentFloatType) =>\n        accumulatedFloatTypes + currentFloatType.reprXML(),\n      \"\"\n    );\n  }\n\n  get valueJSON() {\n    const value = this.#floatlist.reduce(\n      (accumulatedFloatTypes, currentFloatType) => {\n        accumulatedFloatTypes.push(currentFloatType.reprJSON().pop());\n        return accumulatedFloatTypes;\n      },\n      []\n    );\n\n    value.unshift(this.constructor.type.toLowerCase());\n\n    return value;\n  }\n\n  #validate(floatlist) {\n    if (typeof floatlist === \"undefined\")\n      throw new MissingArgument(\"Value for FloatListType must be supplied\");\n    else if (!Array.isArray(floatlist))\n      throw new TypeError(\n        \"Value of FloatListType should be passed in an array\"\n      );\n\n    for (const float of floatlist) {\n      if (float.constructor.identifier !== \"FloatType\")\n        throw new TypeError(\n          \"Value of FloatListType should be an array of FloatTypes\"\n        );\n    }\n  }\n\n  constructor(floatlist) {\n    super();\n\n    this.#validate(floatlist);\n    this.#floatlist = floatlist;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(FloatListType);\n"],"names":["FloatListType","floatlist","checkAbstractPropertiesAndMethods","Object","freeze","reduce","accumulatedFloatTypes","currentFloatType","push","repr","join","reprXML","value","reprJSON","pop","unshift","constructor","type","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","float","identifier"],"mappings":"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"}