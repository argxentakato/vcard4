{"version":3,"file":"TextListType.js","sources":["../../../src/values/TextListType.js"],"sourcesContent":["import { BaseValue } from \"./BaseValue.js\";\nimport { MissingArgument } from \"../errors/index.js\";\n\nexport class TextListType extends BaseValue {\n  static type = \"TEXT\";\n  static identifier = \"TextListType\";\n\n  #textlist;\n\n  get value() {\n    return this.#textlist\n      .reduce((accumulatedTextTypes, currentTextType) => {\n        accumulatedTextTypes.push(currentTextType.repr());\n        return accumulatedTextTypes;\n      }, [])\n      .join(\",\");\n  }\n\n  get valueXML() {\n    return this.#textlist.reduce(\n      (accumulatedTextTypes, currentTextType) =>\n        accumulatedTextTypes + currentTextType.reprXML(),\n      \"\"\n    );\n  }\n\n  get valueJSON() {\n    const value = this.#textlist.reduce(\n      (accumulatedTextTypes, currentTextType) => {\n        accumulatedTextTypes.push(currentTextType.reprJSON().pop());\n        return accumulatedTextTypes;\n      },\n      []\n    );\n\n    value.unshift(this.constructor.type.toLowerCase());\n\n    return value;\n  }\n\n  #validate(textlist) {\n    if (typeof textlist === \"undefined\")\n      throw new MissingArgument(\"Value for TextListType must be supplied\");\n    else if (!Array.isArray(textlist))\n      throw new TypeError(\"Value for TextListType must be passed in an array\");\n\n    for (const text of textlist) {\n      if (text.constructor.identifier !== \"TextType\")\n        throw new TypeError(\n          \"Invalid type for value of TextListType. It should be an array of TextTypes\"\n        );\n    }\n  }\n\n  constructor(textlist) {\n    super();\n\n    this.#validate(textlist);\n    this.#textlist = textlist;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(TextListType);\n"],"names":["TextListType","textlist","checkAbstractPropertiesAndMethods","Object","freeze","reduce","accumulatedTextTypes","currentTextType","push","repr","join","reprXML","value","reprJSON","pop","unshift","constructor","type","toLowerCase","BaseValue","MissingArgument","Array","isArray","TypeError","text","identifier"],"mappings":"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"}