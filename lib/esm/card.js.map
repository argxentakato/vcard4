{"version":3,"file":"card.js","sources":["../../src/card.js"],"sourcesContent":["import { MissingArgument, InvalidArgument } from \"./errors/index.js\";\n\nexport class VCARD {\n  static cardinalityNoneOrOneProps = new Set([\n    \"AnniversaryProperty\",\n    \"BdayProperty\",\n    \"GenderProperty\",\n    \"BirthplaceProperty\",\n    \"DeathplaceProperty\",\n    \"DeathdateProperty\",\n    \"KindProperty\",\n    \"NProperty\",\n    \"ProdidProperty\",\n    \"RevProperty\",\n    \"UIDProperty\",\n  ]);\n\n  #props;\n\n  repr() {\n    const CRLF = \"\\r\\n\";\n\n    let value = \"\";\n    value += \"BEGIN:VCARD\" + CRLF;\n    value += \"VERSION:4.0\" + CRLF;\n\n    value +=\n      this.#props\n        .reduce((accumulatedProps, currentProp) => {\n          accumulatedProps.push(currentProp.repr());\n          return accumulatedProps;\n        }, [])\n        .join(CRLF) + CRLF;\n\n    value += \"END:VCARD\" + CRLF;\n\n    return value;\n  }\n\n  reprXML() {\n    let valueXML = \"\";\n    valueXML += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    valueXML += '<vcards xmlns=\"urn:ietf:params:xml:ns:vcard-4.0\">';\n    valueXML += \"<vcard>\";\n\n    valueXML += this.#props.reduce(\n      (accumulatedParameters, currentParameter) =>\n        accumulatedParameters + currentParameter.reprXML(),\n      \"\"\n    );\n\n    valueXML += \"</vcard>\";\n    valueXML += \"</vcards>\";\n\n    return valueXML;\n  }\n\n  reprJSON() {\n    return [\n      \"vcard\",\n      this.#props.reduce((accumulatedProps, currentProp) => {\n        if (currentProp.constructor.identifier === \"Group\")\n          accumulatedProps = accumulatedProps.concat(currentProp.reprJSON());\n        else accumulatedProps.push(currentProp.reprJSON());\n\n        return accumulatedProps;\n      }, []),\n    ];\n  }\n\n  #validate(props) {\n    if (typeof props === \"undefined\")\n      throw new MissingArgument(\"Properties for VCARD must be supplied\");\n    else if (!Array.isArray(props))\n      throw new InvalidArgument(\n        \"Properties for VCARD must be passed in an array\"\n      );\n\n    const propertyInstanceCount = new Map([\n      [\"FNProperty\", 0],\n      [\"AnniversaryProperty\", 0],\n      [\"BdayProperty\", 0],\n      [\"GenderProperty\", 0],\n      [\"BirthplaceProperty\", 0],\n      [\"DeathplaceProperty\", 0],\n      [\"DeathdateProperty\", 0],\n      [\"KindProperty\", 0],\n      [\"NProperty\", 0],\n      [\"ProdidProperty\", 0],\n      [\"RevProperty\", 0],\n      [\"UIDProperty\", 0],\n    ]);\n    let hasMemberProperty = false;\n    let kindPropertyIsGroup = false;\n\n    for (const prop of props) {\n      if (!/(?:^Group$|Property$)/.test(prop.constructor.identifier))\n        throw new InvalidArgument(\"Unidentified item included in properties\");\n\n      let count;\n\n      switch (prop.constructor.identifier) {\n        case \"MemberProperty\":\n          hasMemberProperty = true;\n          break;\n\n        case \"KindProperty\":\n          if (/^group$/i.test(prop.value)) kindPropertyIsGroup = true;\n          break;\n\n        case \"Group\":\n          if (prop.hasMemberProperty) hasMemberProperty = true;\n\n          if (prop.kindPropertyIsGroup) kindPropertyIsGroup = true;\n\n          for (const propName of prop.propertyInstanceCount.keys()) {\n            const _groupCount = prop.propertyInstanceCount.get(propName);\n            const _cardcount = propertyInstanceCount.get(propName);\n\n            count = _groupCount + _cardcount;\n\n            propertyInstanceCount.set(propName, count);\n          }\n          break;\n\n        default:\n          if (!propertyInstanceCount.has(prop.constructor.identifier)) continue;\n\n          count = propertyInstanceCount.get(prop.constructor.identifier);\n          count++;\n          propertyInstanceCount.set(prop.constructor.identifier, count);\n      }\n    }\n\n    if (\n      Array.from(this.constructor.cardinalityNoneOrOneProps.keys()).some(\n        (property) => propertyInstanceCount.get(property) > 1\n      )\n    )\n      throw new InvalidArgument(\n        \"AnniversaryProperty, BdayProperty, GenderProperty, KindProperty, NProperty, ProdidProperty, RevProperty and UIDProperty must not have more than one instance supplied\"\n      );\n\n    if (propertyInstanceCount.get(\"FNProperty\") < 1)\n      throw new MissingArgument(\n        \"One or more FNProperty instances must be supplied\"\n      );\n    else if (hasMemberProperty && !kindPropertyIsGroup)\n      throw new InvalidArgument(\n        'MemberProperty should only be used if the value of the KindProperty is \"group\"'\n      );\n  }\n\n  constructor(props) {\n    this.#validate(props);\n    this.#props = props;\n\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(VCARD);\n"],"names":["_props","WeakMap","_validate","WeakSet","VCARD","props","_classCallCheck","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","value","_classPrivateMethodGet","_validate2","call","_classPrivateFieldSet","Object","freeze","_createClass","key","repr","CRLF","_classPrivateFieldGet","reduce","accumulatedProps","currentProp","push","join","reprXML","valueXML","accumulatedParameters","currentParameter","reprJSON","constructor","identifier","concat","MissingArgument","Array","isArray","InvalidArgument","propertyInstanceCount","Map","hasMemberProperty","kindPropertyIsGroup","_iterator","_createForOfIteratorHelper","_step","s","n","done","prop","test","count","_iterator2","keys","_step2","propName","_groupCount","get","_cardcount","set","err","e","f","has","from","cardinalityNoneOrOneProps","some","property","_defineProperty","Set"],"mappings":";;;;AAAqE,IAAAA,MAAA,oBAAAC,OAAA,EAAA,CAAA;AAAA,IAAAC,SAAA,oBAAAC,OAAA,EAAA,CAAA;AAErE,IAAaC,KAAK,gBAAA,YAAA;EAuJhB,SAAAA,KAAAA,CAAYC,OAAK,EAAE;AAAAC,IAAAA,eAAA,OAAAF,KAAA,CAAA,CAAA;AAAAG,IAAAA,2BAAA,OAAAL,SAAA,CAAA,CAAA;AAAAM,IAAAA,0BAAA,OAAAR,MAAA,EAAA;MAAAS,QAAA,EAAA,IAAA;MAAAC,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IACjBC,sBAAA,CAAA,IAAI,EAAAT,SAAA,EAAAU,UAAA,EAAAC,IAAA,CAAJ,IAAI,EAAWR,OAAK,CAAA,CAAA;AACpBS,IAAAA,qBAAA,CAAI,IAAA,EAAAd,MAAA,EAAUK,OAAK,CAAA,CAAA;AAEnBU,IAAAA,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAA;AACrB,GAAA;AAACC,EAAAA,YAAA,CAAAb,KAAA,EAAA,CAAA;IAAAc,GAAA,EAAA,MAAA;IAAAR,KAAA,EA3ID,SAAAS,IAAAA,GAAO;MACL,IAAMC,IAAI,GAAG,MAAM,CAAA;MAEnB,IAAIV,KAAK,GAAG,EAAE,CAAA;MACdA,KAAK,IAAI,aAAa,GAAGU,IAAI,CAAA;MAC7BV,KAAK,IAAI,aAAa,GAAGU,IAAI,CAAA;AAE7BV,MAAAA,KAAK,IACHW,qBAAA,CAAI,IAAA,EAAArB,MAAA,CAAA,CACDsB,MAAM,CAAC,UAACC,gBAAgB,EAAEC,WAAW,EAAK;QACzCD,gBAAgB,CAACE,IAAI,CAACD,WAAW,CAACL,IAAI,EAAE,CAAC,CAAA;AACzC,QAAA,OAAOI,gBAAgB,CAAA;OACxB,EAAE,EAAE,CAAC,CACLG,IAAI,CAACN,IAAI,CAAC,GAAGA,IAAI,CAAA;MAEtBV,KAAK,IAAI,WAAW,GAAGU,IAAI,CAAA;AAE3B,MAAA,OAAOV,KAAK,CAAA;AACd,KAAA;AAAC,GAAA,EAAA;IAAAQ,GAAA,EAAA,SAAA;IAAAR,KAAA,EAED,SAAAiB,OAAAA,GAAU;MACR,IAAIC,QAAQ,GAAG,EAAE,CAAA;AACjBA,MAAAA,QAAQ,IAAI,wCAAwC,CAAA;AACpDA,MAAAA,QAAQ,IAAI,mDAAmD,CAAA;AAC/DA,MAAAA,QAAQ,IAAI,SAAS,CAAA;MAErBA,QAAQ,IAAIP,qBAAA,CAAA,IAAI,EAAArB,MAAA,CAAQsB,CAAAA,MAAM,CAC5B,UAACO,qBAAqB,EAAEC,gBAAgB,EAAA;AAAA,QAAA,OACtCD,qBAAqB,GAAGC,gBAAgB,CAACH,OAAO,EAAE,CAAA;AAAA,OAAA,EACpD,EACF,CAAC,CAAA;AAEDC,MAAAA,QAAQ,IAAI,UAAU,CAAA;AACtBA,MAAAA,QAAQ,IAAI,WAAW,CAAA;AAEvB,MAAA,OAAOA,QAAQ,CAAA;AACjB,KAAA;AAAC,GAAA,EAAA;IAAAV,GAAA,EAAA,UAAA;IAAAR,KAAA,EAED,SAAAqB,QAAAA,GAAW;AACT,MAAA,OAAO,CACL,OAAO,EACPV,qBAAA,KAAI,EAAArB,MAAA,CAAQsB,CAAAA,MAAM,CAAC,UAACC,gBAAgB,EAAEC,WAAW,EAAK;AACpD,QAAA,IAAIA,WAAW,CAACQ,WAAW,CAACC,UAAU,KAAK,OAAO,EAChDV,gBAAgB,GAAGA,gBAAgB,CAACW,MAAM,CAACV,WAAW,CAACO,QAAQ,EAAE,CAAC,CAAC,KAChER,gBAAgB,CAACE,IAAI,CAACD,WAAW,CAACO,QAAQ,EAAE,CAAC,CAAA;AAElD,QAAA,OAAOR,gBAAgB,CAAA;OACxB,EAAE,EAAE,CAAC,CACP,CAAA;AACH,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,EAAA,OAAAnB,KAAA,CAAA;AAAA,CAAA,GAAA;AA2FF,SAAAQ,UAAAA,CAzFWP,KAAK,EAAE;EACf,IAAI,OAAOA,KAAK,KAAK,WAAW,EAC9B,MAAM,IAAI8B,eAAe,CAAC,uCAAuC,CAAC,CAAC,KAChE,IAAI,CAACC,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,EAC5B,MAAM,IAAIiC,eAAe,CACvB,iDACF,CAAC,CAAA;AAEH,EAAA,IAAMC,qBAAqB,GAAG,IAAIC,GAAG,CAAC,CACpC,CAAC,YAAY,EAAE,CAAC,CAAC,EACjB,CAAC,qBAAqB,EAAE,CAAC,CAAC,EAC1B,CAAC,cAAc,EAAE,CAAC,CAAC,EACnB,CAAC,gBAAgB,EAAE,CAAC,CAAC,EACrB,CAAC,oBAAoB,EAAE,CAAC,CAAC,EACzB,CAAC,oBAAoB,EAAE,CAAC,CAAC,EACzB,CAAC,mBAAmB,EAAE,CAAC,CAAC,EACxB,CAAC,cAAc,EAAE,CAAC,CAAC,EACnB,CAAC,WAAW,EAAE,CAAC,CAAC,EAChB,CAAC,gBAAgB,EAAE,CAAC,CAAC,EACrB,CAAC,aAAa,EAAE,CAAC,CAAC,EAClB,CAAC,aAAa,EAAE,CAAC,CAAC,CACnB,CAAC,CAAA;EACF,IAAIC,iBAAiB,GAAG,KAAK,CAAA;EAC7B,IAAIC,mBAAmB,GAAG,KAAK,CAAA;AAAC,EAAA,IAAAC,SAAA,GAAAC,0BAAA,CAEbvC,KAAK,CAAA;IAAAwC,KAAA,CAAA;AAAA,EAAA,IAAA;IAAxB,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAA0B;AAAA,MAAA,IAAfC,IAAI,GAAAJ,KAAA,CAAAnC,KAAA,CAAA;AACb,MAAA,IAAI,CAAC,uBAAuB,CAACwC,IAAI,CAACD,IAAI,CAACjB,WAAW,CAACC,UAAU,CAAC,EAC5D,MAAM,IAAIK,eAAe,CAAC,0CAA0C,CAAC,CAAA;AAEvE,MAAA,IAAIa,KAAK,GAAA,KAAA,CAAA,CAAA;AAET,MAAA,QAAQF,IAAI,CAACjB,WAAW,CAACC,UAAU;AACjC,QAAA,KAAK,gBAAgB;AACnBQ,UAAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,UAAA,MAAA;AAEF,QAAA,KAAK,cAAc;UACjB,IAAI,UAAU,CAACS,IAAI,CAACD,IAAI,CAACvC,KAAK,CAAC,EAAEgC,mBAAmB,GAAG,IAAI,CAAA;AAC3D,UAAA,MAAA;AAEF,QAAA,KAAK,OAAO;AACV,UAAA,IAAIO,IAAI,CAACR,iBAAiB,EAAEA,iBAAiB,GAAG,IAAI,CAAA;AAEpD,UAAA,IAAIQ,IAAI,CAACP,mBAAmB,EAAEA,mBAAmB,GAAG,IAAI,CAAA;UAAC,IAAAU,UAAA,GAAAR,0BAAA,CAElCK,IAAI,CAACV,qBAAqB,CAACc,IAAI,EAAE,CAAA;YAAAC,MAAA,CAAA;AAAA,UAAA,IAAA;YAAxD,KAAAF,UAAA,CAAAN,CAAA,EAAAQ,EAAAA,CAAAA,CAAAA,MAAA,GAAAF,UAAA,CAAAL,CAAA,EAAAC,EAAAA,IAAA,GAA0D;AAAA,cAAA,IAA/CO,QAAQ,GAAAD,MAAA,CAAA5C,KAAA,CAAA;cACjB,IAAM8C,WAAW,GAAGP,IAAI,CAACV,qBAAqB,CAACkB,GAAG,CAACF,QAAQ,CAAC,CAAA;AAC5D,cAAA,IAAMG,UAAU,GAAGnB,qBAAqB,CAACkB,GAAG,CAACF,QAAQ,CAAC,CAAA;cAEtDJ,KAAK,GAAGK,WAAW,GAAGE,UAAU,CAAA;AAEhCnB,cAAAA,qBAAqB,CAACoB,GAAG,CAACJ,QAAQ,EAAEJ,KAAK,CAAC,CAAA;AAC5C,aAAA;AAAC,WAAA,CAAA,OAAAS,GAAA,EAAA;YAAAR,UAAA,CAAAS,CAAA,CAAAD,GAAA,CAAA,CAAA;AAAA,WAAA,SAAA;AAAAR,YAAAA,UAAA,CAAAU,CAAA,EAAA,CAAA;AAAA,WAAA;AACD,UAAA,MAAA;AAEF,QAAA;UACE,IAAI,CAACvB,qBAAqB,CAACwB,GAAG,CAACd,IAAI,CAACjB,WAAW,CAACC,UAAU,CAAC,EAAE,SAAA;UAE7DkB,KAAK,GAAGZ,qBAAqB,CAACkB,GAAG,CAACR,IAAI,CAACjB,WAAW,CAACC,UAAU,CAAC,CAAA;AAC9DkB,UAAAA,KAAK,EAAE,CAAA;UACPZ,qBAAqB,CAACoB,GAAG,CAACV,IAAI,CAACjB,WAAW,CAACC,UAAU,EAAEkB,KAAK,CAAC,CAAA;AACjE,OAAA;AACF,KAAA;AAAC,GAAA,CAAA,OAAAS,GAAA,EAAA;IAAAjB,SAAA,CAAAkB,CAAA,CAAAD,GAAA,CAAA,CAAA;AAAA,GAAA,SAAA;AAAAjB,IAAAA,SAAA,CAAAmB,CAAA,EAAA,CAAA;AAAA,GAAA;AAED,EAAA,IACE1B,KAAK,CAAC4B,IAAI,CAAC,IAAI,CAAChC,WAAW,CAACiC,yBAAyB,CAACZ,IAAI,EAAE,CAAC,CAACa,IAAI,CAChE,UAACC,QAAQ,EAAA;AAAA,IAAA,OAAK5B,qBAAqB,CAACkB,GAAG,CAACU,QAAQ,CAAC,GAAG,CAAC,CAAA;AAAA,GACvD,CAAC,EAED,MAAM,IAAI7B,eAAe,CACvB,uKACF,CAAC,CAAA;AAEH,EAAA,IAAIC,qBAAqB,CAACkB,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,EAC7C,MAAM,IAAItB,eAAe,CACvB,mDACF,CAAC,CAAC,KACC,IAAIM,iBAAiB,IAAI,CAACC,mBAAmB,EAChD,MAAM,IAAIJ,eAAe,CACvB,gFACF,CAAC,CAAA;AACL,CAAA;AAAC8B,eAAA,CArJUhE,KAAK,EACmB,2BAAA,EAAA,IAAIiE,GAAG,CAAC,CACzC,qBAAqB,EACrB,cAAc,EACd,gBAAgB,EAChB,oBAAoB,EACpB,oBAAoB,EACpB,mBAAmB,EACnB,cAAc,EACd,WAAW,EACX,gBAAgB,EAChB,aAAa,EACb,aAAa,CACd,CAAC,CAAA,CAAA;AAkJJtD,MAAM,CAACC,MAAM,CAACZ,KAAK,CAAC;;;;"}