{"version":3,"file":"index.js","sources":["../../../src/parse/index.js"],"sourcesContent":["import { MissingArgument } from \"../errors/index.js\";\nimport { Tokenizer } from \"./Tokenizer.js\";\nimport { Parser } from \"./Parser.js\";\n\nexport function parse(vcard) {\n  if (typeof vcard === \"undefined\")\n    throw new MissingArgument(\"vCard to be parsed must be supplied\");\n  else if (typeof vcard !== \"string\")\n    throw new TypeError(\"vCard to be parsed must be of type string\");\n\n  const tokenizedVcard = new Tokenizer(vcard);\n\n  if (tokenizedVcard.numberOfVcards === 1)\n    return new Parser(tokenizedVcard.tokens).parsed;\n\n  const _tokenizedVcards = [];\n  for (const tokenVcard of tokenizedVcard.tokens)\n    _tokenizedVcards.push(new Parser(tokenVcard).parsed);\n  return _tokenizedVcards;\n}\n"],"names":["parse","vcard","MissingArgument","TypeError","tokenizedVcard","Tokenizer","numberOfVcards","Parser","tokens","parsed","_tokenizedVcards","tokenVcard","push"],"mappings":";;;;;AAIO,SAASA,KAAT,CAAeC,KAAf,EAAsB;EAC3B,IAAI,OAAOA,KAAP,KAAiB,WAArB,EACE,MAAM,IAAIC,eAAJ,CAAoB,qCAApB,CAAN,CADF,KAEK,IAAI,OAAOD,KAAP,KAAiB,QAArB,EACH,MAAM,IAAIE,SAAJ,CAAc,2CAAd,CAAN,CAAA;AAEF,EAAA,IAAMC,cAAc,GAAG,IAAIC,SAAJ,CAAcJ,KAAd,CAAvB,CAAA;AAEA,EAAA,IAAIG,cAAc,CAACE,cAAf,KAAkC,CAAtC,EACE,OAAO,IAAIC,MAAJ,CAAWH,cAAc,CAACI,MAA1B,EAAkCC,MAAzC,CAAA;EAEF,IAAMC,gBAAgB,GAAG,EAAzB,CAAA;;EAX2B,IAYFN,SAAAA,GAAAA,0BAAAA,CAAAA,cAAc,CAACI,MAZb,CAAA;AAAA,MAAA,KAAA,CAAA;;AAAA,EAAA,IAAA;IAY3B,KACE,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;AAAA,MAAA,IADSG,UACT,GAAA,KAAA,CAAA,KAAA,CAAA;;MAAAD,gBAAgB,CAACE,IAAjB,CAAsB,IAAIL,MAAJ,CAAWI,UAAX,EAAuBF,MAA7C,CAAA,CAAA;AAAqD,KAAA;AAb5B,GAAA,CAAA,OAAA,GAAA,EAAA;AAAA,IAAA,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,GAAA,SAAA;AAAA,IAAA,SAAA,CAAA,CAAA,EAAA,CAAA;AAAA,GAAA;;AAc3B,EAAA,OAAOC,gBAAP,CAAA;AACD;;;;"}