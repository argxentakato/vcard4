{"version":3,"file":"AnniversaryProperty.js","sources":["../../../src/properties/AnniversaryProperty.js"],"sourcesContent":["import { BaseProperty } from \"./BaseProperty.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class AnniversaryProperty extends BaseProperty {\n  static identifier = \"AnniversaryProperty\";\n  static prop = \"ANNIVERSARY\";\n  static cardinality = \"*1\";\n  static acceptableParamTypes = new Set([\n    \"ValueParameter\",\n    \"AltidParameter\",\n    \"CalscaleParameter\",\n    \"AnyParameter\",\n  ]);\n  static acceptableValTypes = new Set([\"DateTimeType\", \"TextType\"]);\n\n  #params;\n  #value;\n\n  get params() {\n    return this.#params\n      .reduce((parametersArray, currentParameter) => {\n        parametersArray.push(currentParameter.repr());\n        return parametersArray;\n      }, [])\n      .join(\";\");\n  }\n\n  get paramsXML() {\n    return this.#params.reduce(\n      (accumulatedParameters, currentParameter) =>\n        accumulatedParameters + currentParameter.reprXML(),\n      \"\"\n    );\n  }\n\n  get paramsJSON() {\n    return this.#params.reduce(\n      (accumulatedParameters, currentParameter) => ({\n        ...currentParameter.reprJSON(),\n        ...accumulatedParameters,\n      }),\n      {}\n    );\n  }\n\n  get valueJSON() {\n    return this.#value.reprJSON();\n  }\n\n  get value() {\n    return this.#value.repr();\n  }\n\n  get valueXML() {\n    return this.#value.reprXML();\n  }\n\n  #validate(params, value) {\n    if (typeof params === \"undefined\" || typeof value === \"undefined\")\n      throw new MissingArgument(\n        \"Parameters and value for AnniversaryProperty must be supplied\"\n      );\n    else if (!Array.isArray(params))\n      throw new InvalidArgument(\n        \"Parameters for AnniversaryProperty must be passed in an array\"\n      );\n\n    const parameterInstanceCount = new Set();\n\n    if (\n      !params.every((param) => {\n        if (param.constructor.identifier !== \"AnyParameter\") {\n          if (parameterInstanceCount.has(param.constructor.identifier))\n            throw new InvalidArgument(\n              \"Parameters must not have more than one instance supplied\"\n            );\n          else parameterInstanceCount.add(param.constructor.identifier);\n        } else {\n          if (parameterInstanceCount.has(param.param))\n            throw new InvalidArgument(\n              \"Parameters must not have more than one instance supplied\"\n            );\n          else parameterInstanceCount.add(param.param);\n        }\n\n        if (param.constructor.identifier === \"ValueParameter\")\n          return (\n            (param.value === \"date-and-or-time\" &&\n              value.constructor.identifier === \"DateTimeType\") ||\n            (param.value === \"text\" &&\n              value.constructor.identifier === \"TextType\")\n          );\n        else if (param.constructor.identifier === \"LanguageParameter\")\n          return value.constructor.identifier === \"TextType\";\n        else if (param.constructor.identifier === \"CalscaleParameter\")\n          return value.constructor.identifier === \"DateTimeType\";\n\n        return this.constructor.acceptableParamTypes.has(\n          param.constructor.identifier\n        );\n      })\n    )\n      throw new TypeError(\n        \"Some of the parameters passed are not valid parameters for AnniversaryProperty\"\n      );\n    else if (\n      !this.constructor.acceptableValTypes.has(value.constructor.identifier) ||\n      (value.constructor.identifier === \"DateTimeType\" &&\n        value.type !== \"DATE-AND-OR-TIME\")\n    )\n      throw new TypeError(\"Invalid type for value of AnniversaryProperty\");\n  }\n\n  constructor(params, val) {\n    super();\n\n    this.#validate(params, val);\n    this.#params = params;\n    this.#value = val;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(AnniversaryProperty);\n"],"names":["AnniversaryProperty","params","val","checkAbstractPropertiesAndMethods","Object","freeze","reduce","parametersArray","currentParameter","push","repr","join","accumulatedParameters","reprXML","_objectSpread","reprJSON","BaseProperty","value","MissingArgument","Array","isArray","InvalidArgument","parameterInstanceCount","Set","every","param","constructor","identifier","has","add","acceptableParamTypes","TypeError","acceptableValTypes","type"],"mappings":";;;;;;;;;;;AAGA,IAAaA,mBAAb,gBAAA,UAAA,aAAA,EAAA;AAAA,EAAA,SAAA,CAAA,mBAAA,EAAA,aAAA,CAAA,CAAA;;AAAA,EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,mBAAA,CAAA,CAAA;;EA8GE,SAAYC,mBAAAA,CAAAA,QAAZ,EAAoBC,GAApB,EAAyB;AAAA,IAAA,IAAA,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,CAAA,CAAA;;AACvB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AADuB,IAAA,2BAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,MAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;IAGvB,sBAAeD,CAAAA,sBAAAA,CAAAA,KAAAA,CAAAA,EAAAA,SAAAA,EAAAA,UAAAA,CAAAA,CAAAA,IAAAA,CAAAA,sBAAAA,CAAAA,KAAAA,CAAAA,EAAAA,QAAf,EAAuBC,GAAvB,CAAA,CAAA;;AACA,IAAA,qBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAAeD,QAAf,CAAA,CAAA;;AACA,IAAA,qBAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,MAAA,EAAcC,GAAd,CAAA,CAAA;;AAEA,IAAA,KAAA,CAAKC,iCAAL,EAAA,CAAA;;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAA,sBAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AARuB,IAAA,OAAA,KAAA,CAAA;AASxB,GAAA;;AAvHH,EAAA,YAAA,CAAA,mBAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,QAAA;AAAA,IAAA,GAAA,EAeE,SAAa,GAAA,GAAA;AACX,MAAA,OAAO,qCACJC,MADI,CACG,UAACC,eAAD,EAAkBC,gBAAlB,EAAuC;AAC7CD,QAAAA,eAAe,CAACE,IAAhB,CAAqBD,gBAAgB,CAACE,IAAjB,EAArB,CAAA,CAAA;AACA,QAAA,OAAOH,eAAP,CAAA;AACD,OAJI,EAIF,EAJE,CAAA,CAKJI,IALI,CAKC,GALD,CAAP,CAAA;AAMD,KAAA;AAtBH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,GAAA,EAwBE,SAAgB,GAAA,GAAA;AACd,MAAA,OAAO,qCAAaL,MAAb,CACL,UAACM,qBAAD,EAAwBJ,gBAAxB,EAAA;AAAA,QAAA,OACEI,qBAAqB,GAAGJ,gBAAgB,CAACK,OAAjB,EAD1B,CAAA;OADK,EAGL,EAHK,CAAP,CAAA;AAKD,KAAA;AA9BH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,YAAA;AAAA,IAAA,GAAA,EAgCE,SAAiB,GAAA,GAAA;AACf,MAAA,OAAO,qCAAaP,MAAb,CACL,UAACM,qBAAD,EAAwBJ,gBAAxB,EAAA;AAAA,QAAA,OAAAM,cAAA,CAAAA,cAAA,CAAA,EAAA,EACKN,gBAAgB,CAACO,QAAjB,EADL,GAEKH,qBAFL,CAAA,CAAA;OADK,EAKL,EALK,CAAP,CAAA;AAOD,KAAA;AAxCH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,GAAA,EA0CE,SAAgB,GAAA,GAAA;MACd,OAAO,qBAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAYG,QAAZ,EAAP,CAAA;AACD,KAAA;AA5CH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,OAAA;AAAA,IAAA,GAAA,EA8CE,SAAY,GAAA,GAAA;MACV,OAAO,qBAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAYL,IAAZ,EAAP,CAAA;AACD,KAAA;AAhDH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,UAAA;AAAA,IAAA,GAAA,EAkDE,SAAe,GAAA,GAAA;MACb,OAAO,qBAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAYG,OAAZ,EAAP,CAAA;AACD,KAAA;AApDH,GAAA,CAAA,CAAA,CAAA;;AAAA,EAAA,OAAA,mBAAA,CAAA;AAAA,CAAA,CAAyCG,YAAzC,EAAA;;oBAsDYf,QAAQgB,OAAO;AAAA,EAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AACvB,EAAA,IAAI,OAAOhB,MAAP,KAAkB,WAAlB,IAAiC,OAAOgB,KAAP,KAAiB,WAAtD,EACE,MAAM,IAAIC,eAAJ,CACJ,+DADI,CAAN,CADF,KAIK,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcnB,MAAd,CAAL,EACH,MAAM,IAAIoB,eAAJ,CACJ,+DADI,CAAN,CAAA;AAIF,EAAA,IAAMC,sBAAsB,GAAG,IAAIC,GAAJ,EAA/B,CAAA;AAEA,EAAA,IACE,CAACtB,MAAM,CAACuB,KAAP,CAAa,UAACC,KAAD,EAAW;AACvB,IAAA,IAAIA,KAAK,CAACC,WAAN,CAAkBC,UAAlB,KAAiC,cAArC,EAAqD;MACnD,IAAIL,sBAAsB,CAACM,GAAvB,CAA2BH,KAAK,CAACC,WAAN,CAAkBC,UAA7C,CAAJ,EACE,MAAM,IAAIN,eAAJ,CACJ,0DADI,CAAN,CADF,KAIKC,sBAAsB,CAACO,GAAvB,CAA2BJ,KAAK,CAACC,WAAN,CAAkBC,UAA7C,CAAA,CAAA;AACN,KAND,MAMO;MACL,IAAIL,sBAAsB,CAACM,GAAvB,CAA2BH,KAAK,CAACA,KAAjC,CAAJ,EACE,MAAM,IAAIJ,eAAJ,CACJ,0DADI,CAAN,CADF,KAIKC,sBAAsB,CAACO,GAAvB,CAA2BJ,KAAK,CAACA,KAAjC,CAAA,CAAA;AACN,KAAA;;AAED,IAAA,IAAIA,KAAK,CAACC,WAAN,CAAkBC,UAAlB,KAAiC,gBAArC,EACE,OACGF,KAAK,CAACR,KAAN,KAAgB,kBAAhB,IACCA,KAAK,CAACS,WAAN,CAAkBC,UAAlB,KAAiC,cADnC,IAECF,KAAK,CAACR,KAAN,KAAgB,MAAhB,IACCA,KAAK,CAACS,WAAN,CAAkBC,UAAlB,KAAiC,UAJrC,CADF,KAOK,IAAIF,KAAK,CAACC,WAAN,CAAkBC,UAAlB,KAAiC,mBAArC,EACH,OAAOV,KAAK,CAACS,WAAN,CAAkBC,UAAlB,KAAiC,UAAxC,CADG,KAEA,IAAIF,KAAK,CAACC,WAAN,CAAkBC,UAAlB,KAAiC,mBAArC,EACH,OAAOV,KAAK,CAACS,WAAN,CAAkBC,UAAlB,KAAiC,cAAxC,CAAA;AAEF,IAAA,OAAO,MAAI,CAACD,WAAL,CAAiBI,oBAAjB,CAAsCF,GAAtC,CACLH,KAAK,CAACC,WAAN,CAAkBC,UADb,CAAP,CAAA;GA3BD,CADH,EAiCE,MAAM,IAAII,SAAJ,CACJ,gFADI,CAAN,CAjCF,KAoCK,IACH,CAAC,IAAA,CAAKL,WAAL,CAAiBM,kBAAjB,CAAoCJ,GAApC,CAAwCX,KAAK,CAACS,WAAN,CAAkBC,UAA1D,CAAD,IACCV,KAAK,CAACS,WAAN,CAAkBC,UAAlB,KAAiC,cAAjC,IACCV,KAAK,CAACgB,IAAN,KAAe,kBAHd,EAKH,MAAM,IAAIF,SAAJ,CAAc,+CAAd,CAAN,CAAA;AACH,CAAA;;AA5GU/B,eAAAA,CAAAA,mCACS;;AADTA,eAAAA,CAAAA,6BAEG;;AAFHA,eAAAA,CAAAA,oCAGU;;AAHVA,eAAAA,CAAAA,qBAImB,sBAAA,EAAA,IAAIuB,GAAJ,CAAQ,CACpC,gBADoC,EAEpC,gBAFoC,EAGpC,mBAHoC,EAIpC,cAJoC,CAAR;;gBAJnBvB,2CAUiB,IAAIuB,GAAJ,CAAQ,CAAC,cAAD,EAAiB,UAAjB,CAAR;;AAgH9BnB,MAAM,CAACC,MAAP,CAAcL,mBAAd,CAAA;;;;"}