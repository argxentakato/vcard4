{"version":3,"file":"DeathPlaceProperty.js","sources":["../../../src/properties/DeathPlaceProperty.js"],"sourcesContent":["import { BaseProperty } from \"./BaseProperty.js\";\nimport { MissingArgument, InvalidArgument } from \"../errors/index.js\";\n\nexport class DeathPlaceProperty extends BaseProperty {\n  static identifier = \"DeathPlaceProperty\";\n  static prop = \"DEATHPLACE\";\n  static cardinality = \"*1\";\n  static acceptableParamTypes = new Set([\n    \"ValueParameter\",\n    \"LanguageParameter\",\n    \"AltidParameter\",\n    \"AnyParameter\",\n  ]);\n  static acceptableValTypes = new Set([\"TextType\", \"URIType\"]);\n\n  #params;\n  #value;\n\n  get params() {\n    return this.#params\n      .reduce((parametersArray, currentParameter) => {\n        parametersArray.push(currentParameter.repr());\n        return parametersArray;\n      }, [])\n      .join(\";\");\n  }\n\n  get paramsXML() {\n    return this.#params.reduce(\n      (accumulatedParameters, currentParameter) =>\n        accumulatedParameters + currentParameter.reprXML(),\n      \"\"\n    );\n  }\n\n  get paramsJSON() {\n    return this.#params.reduce(\n      (accumulatedParameters, currentParameter) => ({\n        ...currentParameter.reprJSON(),\n        ...accumulatedParameters,\n      }),\n      {}\n    );\n  }\n\n  get value() {\n    return this.#value.repr();\n  }\n\n  get valueXML() {\n    return this.#value.reprXML();\n  }\n\n  get valueJSON() {\n    return this.#value.reprJSON();\n  }\n\n  #validate(params, value) {\n    if (typeof params === \"undefined\" || typeof value === \"undefined\")\n      throw new MissingArgument(\n        \"Parameters and value for DeathPlaceProperty must be supplied\"\n      );\n    else if (!Array.isArray(params))\n      throw new InvalidArgument(\n        \"Parameters for DeathPlaceProperty must be passed in an array\"\n      );\n\n    const parameterInstanceCount = new Set();\n\n    if (\n      !params.every((param) => {\n        if (param.constructor.identifier !== \"AnyParameter\") {\n          if (parameterInstanceCount.has(param.constructor.identifier))\n            throw new InvalidArgument(\n              \"Parameters must not have more than one instance supplied\"\n            );\n          else parameterInstanceCount.add(param.constructor.identifier);\n        } else {\n          if (parameterInstanceCount.has(param.param))\n            throw new InvalidArgument(\n              \"Parameters must not have more than one instance supplied\"\n            );\n          else parameterInstanceCount.add(param.param);\n        }\n\n        if (param.constructor.identifier === \"ValueParameter\")\n          return (\n            (param.value === \"uri\" &&\n              value.constructor.identifier === \"URIType\") ||\n            (param.value === \"text\" &&\n              value.constructor.identifier === \"TextType\")\n          );\n        else if (param.constructor.identifier === \"LanguageParameter\")\n          return value.constructor.identifier === \"TextType\";\n\n        return this.constructor.acceptableParamTypes.has(\n          param.constructor.identifier\n        );\n      })\n    )\n      throw new TypeError(\n        \"Some of the parameters passed are not valid parameters for DeathPlaceProperty\"\n      );\n    else if (\n      !this.constructor.acceptableValTypes.has(value.constructor.identifier)\n    )\n      throw new TypeError(\"Invalid type for value of DeathPlaceProperty\");\n  }\n\n  constructor(params, val) {\n    super();\n\n    this.#validate(params, val);\n    this.#params = params;\n    this.#value = val;\n\n    this.checkAbstractPropertiesAndMethods();\n    Object.freeze(this);\n  }\n}\n\nObject.freeze(DeathPlaceProperty);\n"],"names":["DeathPlaceProperty","params","val","checkAbstractPropertiesAndMethods","Object","freeze","reduce","parametersArray","currentParameter","push","repr","join","accumulatedParameters","reprXML","_objectSpread","reprJSON","BaseProperty","value","MissingArgument","Array","isArray","InvalidArgument","parameterInstanceCount","Set","every","param","constructor","identifier","has","add","acceptableParamTypes","TypeError","acceptableValTypes"],"mappings":"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"}